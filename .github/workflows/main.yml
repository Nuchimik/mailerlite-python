---
name: Release
on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  test:
    name: Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/main.yml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Configure poetry
        shell: bash
        run: source .venv/bin/activate
      - name: View poetry version
        run: poetry --version
      - name: Install dependencies
        run: |
          poetry install
          poetry install pytest-github-actions-annotate-failures
      - name: Test with pytest
        run: pytest

  beautify:
    name: Beautify
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test]
    outputs:
      new_sha: ${{ steps.sha.outputs.SHA }}

    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Black
        run: python -m pip install black

      - name: Beautify with Black
        run: python -m black .

      - name: Install isort
        run: python -m pip install "isort >=4,<5"

      - name: Sort imports
        run: python -m isort -y -rc .

      - name: Commit and push changes
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          commit-message: 'style: beautify ${{ github.sha }}'
          name: github-actions
          email: action@github.com

      - name: Get new SHA
        id: sha
        run: |
          new_sha=$(git rev-parse HEAD)
          echo "SHA=$new_sha" >> $GITHUB_OUTPUT